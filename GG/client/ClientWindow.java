package client;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

// –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, –∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ —Å–µ–π—á–∞—Å —Ä–µ—à–∞–µ—Ç –∫–ª–∞—Å—Å ClientWindow. –í –Ω—ë–º —Å–æ—Å—Ä–µ–¥–∞—Ç–æ—á–µ–Ω–∞ –ø–æ—á—Ç–∏ –≤—Å—è –ª–æ–≥–∏–∫–∞
// –∫–ª–∏–µ–Ω—Ç–∞ —Ü–µ–ª–∏–∫–æ–º:
//   1. –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (—Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞, –ø–∞–Ω–µ–ª–µ–π, —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–æ–±—ã—Ç–∏—è...)
//   2. –°–µ—Ç–µ–≤–æ–π I/O (—Å–æ–∑–¥–∞–Ω–∏–µ socket –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º)
//   3. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –æ–∫–Ω–∞ (host, port, –ø–æ–∑–∏—Ü–∏—è...)
//
// –í —Ç–∞–∫–æ–º –∫–æ–¥–µ —Å–ª–æ–∂–Ω–µ–µ —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤ —Å–µ–±–µ –º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–µ–π. –ï–≥–æ —Ç–∞–∫–∂–µ —Å–ª–æ–∂–Ω–µ–µ
// —Ä–∞—Å—à–∏—Ä—è—Ç—å –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å. –ù–æ –µ–≥–æ –º–æ–∂–Ω–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç—å, –µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–∑–±–∏—Ç—å —ç—Ç–∏ –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ
// –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.
//
// –†–µ–∫–æ–º–µ–Ω–¥—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, MVC). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥—É–º–∞—Ç—å –Ω–∞–¥
// —Ç–µ–º, –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ–≤–ª—è—é—â–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä,
//   - ClientView –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å GUI –ø–æ–ª—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–µ—Ç–æ–¥—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º–∏
//   - ClientSocket –º–æ–∂–µ—Ç –∞–±—Å—Ç—Ä–∞–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ I/O –æ–ø–µ—Ä–∞—Ü–∏–∏
//   - ClientController –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–µ–Ω –∑–∞ —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Ü–µ–ª–æ–º, –¥–µ–ª–µ–≥–∏—Ä—É—è –ø–æ–¥–∑–∞–¥–∞—á–∏ –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã–º
//   –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
//
// üéì Reference: https://www.educative.io/blog/mvc-tutorial

class ClientWindow extends JFrame {

    private static final String SERVER_HOST = "localhost";
    private static final int SERVER_PORT = 3443;

    private final JTextField jtfMessage;
    private final JTextField jtfName;
    private final JTextArea jtaTextAreaMessage;

    private Socket clientSocket;
    private Scanner inMessage;
    private PrintWriter outMessage;
    private String clientName = "";

    public ClientWindow() {
        try {
            clientSocket = new Socket(SERVER_HOST, SERVER_PORT);
            inMessage = new Scanner(clientSocket.getInputStream());
            outMessage = new PrintWriter(clientSocket.getOutputStream());
        } catch (IOException exception) {
            exception.printStackTrace();
        }

        // –ü–æ—Å–∫–æ–ª—å–∫—É –∫–∞–∂–¥–æ–µ –æ–∫–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–∑ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ —Ç–æ—á–∫–∏, –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Å—Ä–∞–∑—É —è—Å–Ω–æ, —á—Ç–æ –æ–∫–Ω–∞
        // –¥–≤–∞, –≤–µ–¥—å –æ–¥–Ω–æ –∏–∑ –Ω–∏—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –¥—Ä—É–≥–æ–µ. –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–º –±—ã–ª–æ –±—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å (x,y) –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑–≤–Ω–µ,
        // —á—Ç–æ–±—ã –º–µ—Ç–æ–¥ `main` –º–æ–≥ —Ä–∞—Å—Å—Ç–∞–≤–∏—Ç—å –æ–∫–Ω–∞ —Ä—è–¥–æ–º –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º.
        setBounds(600, 600, 600, 600);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–∂–µ –º–æ–∂–Ω–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ. –°–∫–∞–∂–µ–º, –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É (–æ–∫–Ω—É) –º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∏–ª–∏
        // –ø—Ä–æ—Å—Ç–æ —Ä–∞–±–æ—á–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø—è—Ç—å-—Ç–∞–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—è –µ–≥–æ –∏–∑ –º–µ—Ç–æ–¥–∞ `main`. –û—Ç–º–µ—á—É, —á—Ç–æ –µ—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –∫–æ–¥ –Ω–∞
        // –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–æ–≤, —Ç–æ —Å—Ç–∞–Ω–µ—Ç –≥–æ—Ä–∞–∑–¥–æ –ø—Ä–æ—â–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö.
        setTitle("Client");

        jtaTextAreaMessage = new JTextArea();
        jtaTextAreaMessage.setEditable(false);
        jtaTextAreaMessage.setLineWrap(true);

        var jsp = new JScrollPane(jtaTextAreaMessage);
        add(jsp, BorderLayout.CENTER);

        var jlNumberOfClients = new JLabel("Current clients in chat:");
        add(jlNumberOfClients, BorderLayout.NORTH);

        var bottomPanel = new JPanel(new BorderLayout());
        add(bottomPanel, BorderLayout.SOUTH);

        var jbSendMessage = new JButton("Send");
        bottomPanel.add(jbSendMessage, BorderLayout.EAST);

        // –° —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è UI –ø–∞–Ω–µ–ª–∏ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Ç–æ–∏—Ç —Å–ª–µ–≥–∫–∞ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å.
        // –î–≤–æ–µ—Ç–æ—á–∏–µ –æ–±—ã—á–Ω–æ —Å—Ç–∞–≤—è—Ç, –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è —Å—Ç–æ–∏—Ç –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π Label –ø–µ—Ä–µ–¥ –ø–∞–Ω–µ–ª—å—é –≤–≤–æ–¥–∞:
        //
        //                     +--------------------+
        // Enter your message: |                    |
        //                     +--------------------+
        //
        // –ï—Å–ª–∏ –∂–µ —Ç–µ–∫—Å—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏, —Ç–æ —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –∏ –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –¥–≤–æ–µ—Ç–æ—á–∏–µ –Ω–µ —Å—Ç–∞–≤–∏—Ç—Å—è:
        //
        // +--------------------+
        // | Enter your message |
        // +--------------------+
        //
        // –û—Å–æ–±–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –≤ —Ç–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞—é—Ç –¥—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –°–∫–∞–∂–µ–º, Telegram :)
        //
        // –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–∞–∫–∂–µ –ø–æ–∏–∑—É—á–∞—Ç—å, –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π JTextField —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π. –ü—Ä–∏–º–µ—Ä:
        // http://javaswingcomponents.blogspot.com/2012/05/how-to-create-simple-hinttextfield-in.html

        jtfMessage = new JTextField("Enter your message: ");
        jtfMessage.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                jtfMessage.setText("");
            }
        });
        bottomPanel.add(jtfMessage, BorderLayout.CENTER);

        jtfName = new JTextField("Enter your name: ");
        jtfName.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                jtfName.setText("");
            }
        });
        bottomPanel.add(jtfName, BorderLayout.WEST);

        // –ê–Ω–æ–Ω–∏–º–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å –ª—è–º–±–¥–∞–º–∏.
        jbSendMessage.addActionListener(event -> {
            if (!jtfMessage.getText().trim().isEmpty() && !jtfName.getText().trim().isEmpty()) {
                clientName = jtfName.getText();
                sendMessage();
                jtfMessage.grabFocus();
            }
        });

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent event) {
                super.windowClosing(event);
                // –ü–æ–º–Ω–∏—Ç–µ: –¥–ª—è —Å—Ç—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `equals`, –∞ –Ω–µ `==`.
                if (!clientName.isEmpty() && !clientName.equals("Enter your name: ")) {
                    outMessage.println(clientName + " left the chat room");
                } else {
                    outMessage.println("The participant left the chat room without introducing himself");
                }
                outMessage.println("##session##end##");
                outMessage.flush();

                outMessage.close();
                inMessage.close();

                try {
                    clientSocket.close();
                } catch (IOException e) {
                    System.err.println("Could not close socket: " + e.getMessage());
                }
            }
        });

        setVisible(true);

        // –≠—Ç—É —á–∞—Å—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ `start()`. –≠—Ç–æ—Ç –∫–æ–¥ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–µ–Ω –∑–∞ —Ç–æ, —á—Ç–æ–±—ã
        // "–∑–∞–ø—É—Å—Ç–∏—Ç—å" —Ä–∞–±–æ—Ç—É –æ–∫–Ω–∞, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∂–µ –æ–±—ã—á–Ω–æ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é—Ç –∫–æ–¥ –∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–∞–∂–µ
        // –∫–ª–∞—Å—Å Thread —Ç–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –¥—Ä—É–≥–∏–µ —á–∞—Å—Ç–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ç–∞–∫–∂–µ —Å—Ç–æ–∏–ª–æ –±—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤ —Ç–∞–∫–æ–π –º–µ—Ç–æ–¥.
        //
        // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Ç–æ–≥–¥–∞ –≤—ã–≥–ª—è–¥–µ–ª–æ –±—ã —Ç–∞–∫:
        // ```
        //   var clientWindow1 = new ClientWindow();
        //   var clientWindow2 = new ClientWindow();
        //
        //   clientWindow1.start();
        //   clientWindow2.start();
        // ```
        var thread = new Thread(() -> {
            while (true) {
                if (inMessage.hasNext()) {
                    String inMsg = inMessage.nextLine();
                    String clientsCount = "Clients count = ";
                    if (inMsg.indexOf(clientsCount) == 0) {
                        jlNumberOfClients.setText(inMsg);
                    } else {
                        jtaTextAreaMessage.append(inMsg);
                        jtaTextAreaMessage.append("\n");
                    }
                }
            }
        });
        thread.start();
    }

    // –í Java –æ–±—ã—á–Ω–æ –ø—Ä–∏–Ω—è—Ç–æ –Ω–µ —Å–æ–∫—Ä–∞—â–∞—Ç—å —Å–ª–æ–≤–∞ –µ—Å–ª–∏ ono –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞–∫–æ–π-—Ç–æ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç–æ–π –∫–æ–Ω–≤–µ–Ω—Ü–∏–µ–π.
    // –ù–∞–∑–≤–∞–Ω–∏–µ `sendMessage`, —Ö–æ—Ç—è –∏ –±–æ–ª–µ–µ –≤–µ—Ä–±–æ–∑–Ω–æ, —á–∏—Ç–∞–µ—Ç—Å—è –∫—Ä–∞—Å–∏–≤–µ–µ :)
    public void sendMessage() {
        String message = jtfName.getText() + ": " + jtfMessage.getText();
        outMessage.println(message);
        outMessage.flush();
        jtfMessage.setText("");
    }
}

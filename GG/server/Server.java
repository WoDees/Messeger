package server;

import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;
import java.util.List;

class Server {

    private static final int PORT = 3443;
    private final List<ClientHandler> clients = new ArrayList<>();

    public Server() {
        // –í Java –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è try-with-resources. –ï—ë —Å–º—ã—Å–ª –≤ —Ç–æ–º,
        // —á—Ç–æ –æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ `close()` –≤ –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ –∫–æ–¥–∞. –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –µ–π, –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
        // –∫–æ–¥ –Ω–µ–º–Ω–æ–≥–æ –∫–æ—Ä–æ—á–µ.
        //
        // üéì Reference: https://www.baeldung.com/java-try-with-resources
        // üéì Discussion: https://stackoverflow.com/questions/27231193/try-with-resources-closes-sockets-of-spawned-childs
        try (var serverSocket = new ServerSocket(PORT)) {
            System.out.println("Server started!");
            while (true) {
                var clientSocket = serverSocket.accept();

                var clientHandler = new ClientHandler(clientSocket, this);
                clients.add(clientHandler);

                var thread = new Thread(clientHandler);
                thread.start();
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            System.out.println("Server stopped");
        }
    }

    public void sendMessageToAllClients(String message) {
        for (ClientHandler o : clients) {
            o.sendMessage(message);
        }
    }

    public void removeClient(ClientHandler client) {
        clients.remove(client);
    }
}
